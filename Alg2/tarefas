Implementar otimizações do Merge Sort
   - Alternar entre o vetor auxiliar e o vetor de entrada nas chamadas recursivas
   - testar se o vetor já está ordenado antes de chamar a intercalação
   - passar o vetor auxiliar como parâmetro e não como variável local
     
Implementar otimizações do Quick Sort
    - Tentar outras estratégias de pivô
    - QuickSort + Insertion
    - Embaralhar o vetor antes

Melhorar o programa de testes para não ter que calcular sempre os mesmos tempos

-------------------------------------------------------------------------------------
(Utilizar entradas de tamanho 10, 100, 1.000, 10.000. 100.000, 1.000.000)

Trabalho: 


4) No QuickSort, comparar a técnica da mediana de 3 com a mediana de 5

5) Comparar todas as versões do MergeSort

6) Implementar o QuickSort+Insertion para para o número de itens encontrado no item 2.a
    a. Analizar para um vetor de entradas qualquer
    b. Analizar para o pior caso do QuickSort

Para todas as tarefas acima, gerar gráficos no Gnuplot.

---------------------------------DONE-----------------------------------------
1) 
    a. Comparar o QuickSort(pivô no inicio) com o MergeSort com entradas aleatórias
    b. Comparar o QuickSort(pivô no inicio) com o MergeSort com entradas ordenadas

2)
    a. Encontrar um tamaho de entrada onde o Insertion é mais eficiênte que o Quick
    b. Encontrar um tamaho de entrada onde o Insertion é mais eficiênte que o Merge

3) Comparar a pior entrada do QuickSort com o pivô no início e com a técnica da mediana  de três
